/*
 * Tela.java
 *
 * Esse projeto é só um esqueleto para ilustrar os conceitos de Herança e 
 * Polimorfismo.
 * 
 * Será necessário criar mais classes para representar:
 * - Cavaleiro e Arqueiro
 * 
 * Será necessário pensar em uma forma para organizar todos os personagens em
 * uma única ArrayList
 * 
 * Será necessário pensar em uma forma para permitir 'mover' ou 'atacar'
 * todos os personagens, somente aldeões, somente arqueiros ou somente cavaleiros.
 * 
 * Pensar em uma solução com Classe Abstrata ou Interfaces
 * 
 * Created on 10/10/2011, 10:06:46
 */
package poo;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;

/**
 *
 * http://docente.ifsc.edu.br/mello
 */
public class Tela extends javax.swing.JPanel {

   private Principal pai;   // referência o JFrame 'pai'
   private ArrayList<Personagem> personagens; // Lista com os Aldeoes

   /** Creates new form Tela */
   public Tela(Principal aThis) {
      initComponents();
      this.pai = aThis;
      this.setBackground(Color.white); // muda a cor do fundo para branco
      this.personagens = new ArrayList<Personagem>();
   }

   /**
    * Sobreescrevendo o método paint do JPanel
    * Irá percorrer a Lista de aldeoes e invocar o método desenhar de
    * cada um destes
    * @param g 
    */
   @Override
   public void paint(Graphics g) {
      super.paint(g);
      
      // Percorrendo a lista de aldeoes
      for (Personagem aldeao : personagens) {
         aldeao.desenhar(g);
      }
      
      g.dispose(); // liberando o contexto gráfico
   }

   /**
    * Cria um aldeao nas coordenadas X e Y, desenha-o neste JPanel
    * e adiciona o mesmo na lista de aldeoes
    * @param x coordenada X
    * @param y coordenada Y
    */
   public void criarAldeao(int x, int y) {
      Aldeao a = new Aldeao(this, "aldeao",false, x, y);
      a.desenhar(super.getGraphics());
      personagens.add(a);
   }

   /**
    * Atualiza as coordenadas X ou Y de todos os aldeoes
    * @param direcao 
    */
   public void movimentarAldeao(int direcao){
      for (Personagem aldeao : personagens) {
         aldeao.mover(direcao);
      }
      // Depois que as coordenadas foram atualizadas é necessário repintar o
      //JPanel
      this.repaint();
   }
   
   /**
    * Altera o estado do aldeão de atacando para não atacando e vice-versa
    */
   public void atacarAldeao(){
      for (Personagem aldeao : personagens) {
         aldeao.atacar();
      }
      this.repaint();
   }
   
   
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 590, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 316, Short.MAX_VALUE)
      );
   }// </editor-fold>//GEN-END:initComponents
   // Variables declaration - do not modify//GEN-BEGIN:variables
   // End of variables declaration//GEN-END:variables
}
